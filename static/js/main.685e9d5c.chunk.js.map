{"version":3,"sources":["components/listing-item.jsx","components/marketplace-form.jsx","pages/marketplace.jsx","App.js","index.js"],"names":["EditButton","props","onClick","index","type","className","fill","viewBox","xmlns","d","DeleteButton","text","fillRule","clipRule","Badge","children","ListingItem","item","onEdit","onDelete","title","price","imageUrl","numOfStock","onlyOne","description","React","isDeleting","src","alt","MarketPlaceForm","addItem","updateItem","formData","setFormData","editMode","onCancel","submitBtnRef","useRef","titleInputRef","useEffect","current","innerText","handleChange","event","includes","target","name","payloads","value","Number","onSubmit","preventDefault","focus","htmlFor","id","required","onChange","ref","rows","condition","availability","API_URL","formReducer","state","action","Marketplace","initFormData","useReducer","useState","setEditMode","undefined","listings","setListings","page","setPage","loadListings","pageNum","signal","fetch","then","res","json","getListings","data","catch","err","ab","AbortController","abort","console","log","_id","editItem","deleteItem","method","headers","deleteListing","toggleEditMode","disabled","map","newItem","body","JSON","stringify","updatedItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.685e9d5c.chunk.js","sourcesContent":["import * as React from \"react\";\n\nconst EditButton = (props) => {\n  const { onClick, index } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className=\"inline-flex justify-center items-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n      onClick={() => onClick(index)}\n    >\n      <svg\n        className=\"h-4 w-4 mr-1.5\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 20 20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\"></path>\n      </svg>\n      EDIT\n    </button>\n  );\n}\n\nconst DeleteButton = (props) => {\n  const { text, onClick, index } = props;\n\n  return (\n  <button\n    type=\"button\"\n    className=\"inline-flex justify-center items-center py-2 px-4 border border-pink-500 shadow-sm text-sm font-medium rounded-md text-pink-500 bg-white hover:text-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n    onClick={() => onClick(index)}\n  >\n    <svg\n      className=\"w-4 h-4 mr-1.5\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 20 20\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n        clipRule=\"evenodd\"\n      ></path>\n    </svg>\n    {text}\n  </button>\n  );\n}\n\nconst Badge = ({ children }) => (\n  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n    {children}\n  </span>\n);\n\nexport const ListingItem = (props) => {\n  const { index, item, onEdit, onDelete } = props;\n  const { title, price, imageUrl, numOfStock, onlyOne, description } = item;\n\n  const [isDeleting, setIsDeleting] = React.useState(false);\n\n  return (\n    <div className=\"relative flex flex-col\">\n      <div className=\"\n            group\n            block\n            w-full\n            rounded-lg\n            bg-gray-100\n            focus-within:ring-2\n            focus-within:ring-offset-2\n            focus-within:ring-offset-gray-100\n            focus-within:ring-pink-500\n            overflow-hidden\n          \">\n        <img src={imageUrl}\n          alt=\"\" className=\"\n          object-cover\n          pointer-events-none\n          group-hover:opacity-75\n          h-48\n          w-full\n        \" />\n        <button type=\"button\" className=\"absolute inset-0 focus:outline-none\">\n          <span className=\"sr-only\">View details for {title}</span>\n        </button>\n      </div>\n      <div className=\"\n              flex-1 flex\n              md:flex-col\n              justify-between\n              items-start\n              md:items-stretch\n              gap-3\n              px-2\n            \">\n        <div className=\"mt-1 flex-1\">\n          <div className=\"flex justify-between items-center gap-3\">\n            <div>RM <span className=\"text-2xl font-bold\">{price}</span></div>\n            {onlyOne ? (\n              <Badge>Only One</Badge>\n            ) : (\n              <div className=\"text-sm text-gray-500\">\n                {numOfStock} piece available\n              </div>\n            )}\n          </div>\n          <p className=\"\n                      block\n                      text-sm\n                      font-medium\n                      text-gray-900\n                      truncate\n                      pointer-events-none\n                    \">\n            {title}\n          </p>\n          <p className=\"\n                      text-sm\n                      line-clamp-3\n                      font-medium\n                      text-gray-500\n                      pointer-events-none\n                    \">\n            {description}\n          </p>\n        </div>\n        <div className=\"flex flex-col md:flex-row gap-3 py-3\">\n          <EditButton \n            onClick={onEdit} \n            index={index} \n            />\n          <DeleteButton\n            text={isDeleting ? \"DELETING...\" : \"DELETE\"}\n            // onClick={() => setIsDeleting(!isDeleting)}\n            onClick={onDelete}\n            index={index}\n            />\n        </div>\n      </div>\n    </div>\n\n  );\n};\n","\nimport * as React from \"react\";\nimport { useEffect, useRef } from \"react\";\n\nexport const MarketPlaceForm = (props) => {\n\n  const { addItem, updateItem, formData, setFormData, editMode, onCancel } = props;\n\n  const submitBtnRef = useRef();\n  const titleInputRef = useRef();\n\n  useEffect(() => {\n    submitBtnRef.current.innerText = (editMode ? \"Update\" : \"Add\");\n  }, [editMode]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!formData) return;\n    editMode ? updateItem(formData) : addItem(formData);\n\n    if (titleInputRef.current) {\n        titleInputRef.current.focus();\n    }\n  }\n\n  const handleChange = event => {\n    const numberFields = ['price', 'numOfStock']\n      // console.log(`[DEBUG] handleChange name: ${event.target.name}`)\n      // console.log(`[DEBUG] handleChange value: ${event.target.value}`)\n\n    if (numberFields.includes(event.target.name)) {\n      setFormData({\n        type: \"formEvent\",\n        payloads: {\n          name: event.target.name,\n          value: Number(event.target.value)\n        }\n      })\n    } else {\n      setFormData({\n        type: \"formEvent\",\n        payloads: {\n          name: event.target.name,\n          value: event.target.value\n        }\n      })\n    }\n\n  }\n\n  return (\n    <div className=\"\n      flex-initial\n      bg-white\n      w-full\n      lg:max-w-md\n      border-b border-gray-100\n    \">\n      <form className=\"flex flex-col h-full\" onSubmit={handleSubmit}>\n        <div className=\"py-6 px-4 bg-pink-700 sm:px-6\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-medium text-white\">New Listing</h2>\n          </div>\n          <div className=\"mt-1\">\n            <p className=\"text-sm text-pink-300\">\n              Get started by filling in the information below to create your\n              new listing.\n            </p>\n          </div>\n        </div>\n        <div className=\"px-4 sm:px-6 pb-12\">\n          <div className=\"space-y-6 pt-6 pb-5\">\n            <div>\n              <label htmlFor=\"listing-title\" className=\"block text-sm font-medium text-gray-900\">\n                Title\n              </label>\n              <div className=\"mt-1\">\n                <input type=\"text\" name=\"title\" id=\"listing-title\" required className=\"\n                          block\n                          w-full\n                          shadow-sm\n                          sm:text-sm\n                          focus:ring-pink-500 focus:border-pink-500\n                          border-gray-300\n                          rounded-md\n                        \"\n                  value={formData.title || ''}\n                  onChange={handleChange}\n                ref={titleInputRef}\n                />\n              </div>\n            </div>\n            <div>\n              <label htmlFor=\"listing-price\" className=\"block text-sm font-medium text-gray-900\">\n                Price\n              </label>\n              <div className=\"mt-1\">\n                <input type=\"number\" name=\"price\" id=\"listing-price\" required className=\"\n                            block\n                            w-full\n                            shadow-sm\n                            sm:text-sm\n                            focus:ring-pink-500 focus:border-pink-500\n                            border-gray-300\n                            rounded-md\n                          \"\n                  value={formData.price || ''}\n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n            <div>\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-900\">\n                Description\n              </label>\n              <div className=\"mt-1\">\n                <textarea id=\"description\" name=\"description\" rows=\"4\" required className=\"\n                            block\n                            w-full\n                            shadow-sm\n                            sm:text-sm\n                            focus:ring-pink-500 focus:border-pink-500\n                            border border-gray-300\n                            rounded-md\n                          \"\n                  value={formData.description || \"\"}\n                  onChange={handleChange}\n                >\n                </textarea>\n              </div>\n            </div>\n            <div>\n            <label htmlFor=\"listing-condition\" className=\"block text-sm font-medium text-gray-900\">\n                Condition\n              </label>\n\n              <div className=\"mt-1\">\n              <select id=\"listing-condition\" name=\"condition\" required className=\"\n                          block\n                          w-full\n                          pl-3\n                          pr-10\n                          py-2\n                          text-base\n                          border-gray-300\n                          focus:outline-none\n                          focus:ring-pink-500\n                          focus:border-pink-500\n                          sm:text-sm\n                          rounded-md\n                        \"\n                  value={formData.condition || \"new\"}\n                  onChange={handleChange}\n                >\n                  <option value=\"new\">New</option>\n                  <option value=\"used_like-new\">Used (like new)</option>\n                  <option value=\"used_good\">Used (good)</option>\n                  <option value=\"used_fair\">Used (fair)</option>\n                </select>\n\n              </div>\n\n\n            </div>\n            <div>\n            <label htmlFor=\"listing-availability\" className=\"block text-sm font-medium text-gray-900\">\n                Availability\n              </label>\n              <div className=\"mt-1\">\n              <select id=\"listing-availability\" name=\"availability\" required className=\"\n                            block\n                            w-full\n                            pl-3\n                            pr-10\n                            py-2\n                            text-base\n                            border-gray-300\n                            focus:outline-none\n                            focus:ring-pink-500\n                            focus:border-pink-500\n                            sm:text-sm\n                            rounded-md\n                          \"\n                  value={formData.availability || \"in-stock\"}\n                  onChange={handleChange}\n                >\n                  <option value=\"in-stock\">In Stock</option>\n                  <option value=\"single-item\">Single Item</option>\n                </select>\n              </div>\n \n            </div>\n\n            <div>\n              <label htmlFor=\"num-of-stock\" className=\"block text-sm font-medium text-gray-900\">\n                Number of Available Stock\n              </label>\n              <div className=\"mt-1\">\n                <input type=\"number\" name=\"numOfStock\" id=\"num-of-stock\" required className=\"\n                          block\n                          w-full\n                          shadow-sm\n                          sm:text-sm\n                          focus:ring-pink-500 focus:border-pink-500\n                          border-gray-300\n                          rounded-md\n                        \"\n                  value={formData.numOfStock || '1'}\n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"\n            flex-shrink-0\n            px-4\n            py-4\n            flex\n            justify-end\n            border-t border-gray-200\n          \">\n          {editMode &&\n            <button className=\"\n                  inline-flex \n                  justify-center \n                  items-center \n                  py-2 px-4 border \n                  border-pink-500 \n                  shadow-sm \n                  text-sm \n                  font-medium \n                  rounded-md \n                  text-pink-500 \n                  bg-white \n                  hover:text-pink-700 \n                  focus:outline-none \n                  focus:ring-2 \n                  focus:ring-offset-2 \n                  focus:ring-pink-500\n                \"\n              id=\"cancel-btn\"\n              onClick={onCancel}\n            >\n              Cancel\n            </button>\n          }\n          <button type=\"submit\" className=\"\n                ml-4\n                inline-flex\n                justify-center\n                py-2\n                px-4\n                border border-transparent\n                shadow-sm\n                text-sm\n                font-medium\n                rounded-md\n                text-white\n                bg-pink-600\n                hover:bg-pink-700\n                focus:outline-none\n                focus:ring-2\n                focus:ring-offset-2\n                focus:ring-pink-500\n              \"\n            id=\"submit-btn\"\n            ref={submitBtnRef}\n          >\n            ADD\n          </button>\n        </div>\n      </form>\n    </div>\n\n  )\n};","import * as React from \"react\";\nimport { useState, useReducer, useEffect } from \"react\";\nimport { ListingItem } from \"../components/listing-item\";\nimport { MarketPlaceForm } from \"../components/marketplace-form\";\n// import { ItemsData } from \"../data/listings-data\";\n\nconst API_URL = \"https://ecomm-service.herokuapp.com/marketplace\"\n\nconst getListings = (page, signal) => \n  fetch(`${API_URL}?limit=6&page=${page? page: 1}`, {\n    signal,\n  }).then((res) => res.json());\n\nconst createListing = (data) =>\n  fetch(API_URL , {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n\nconst updateListing = (data) =>\n  fetch(`${API_URL}/${data._id}` , {\n    method: \"PATCH\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n\nconst deleteListing = (id) =>\n  fetch(`${API_URL}/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n\n\n\nfunction formReducer(state, action) {\n  switch (action.type) {\n    case \"setData\":\n      return { ...action.payloads }\n    case \"formEvent\":\n      // console.log(`[DEBUG] formReducer name: ${action.payloads.name}`)\n      // console.log(`[DEBUG] formReducer value: ${action.payloads.value}`)\n      return {\n        ...state,\n        [action.payloads.name]: action.payloads.value\n      }\n    default:\n      return state\n  }\n}\n\nexport const Marketplace = () => {\n  // todo: api\n  const initFormData = {\n    \"title\": \"\",\n    \"description\": \"\",\n    \"price\": 0,\n    \"condition\": \"new\",\n    \"imageUrl\": \"\",\n    \"availability\": \"in-stock\",\n    \"numOfStock\": 1,\n  }\n  const [formData, setFormData] = useReducer(formReducer, initFormData);\n  const [editMode, setEditMode] = useState(false);\n  // const [listings, setListings] = useState(ItemsData);\n  const [listings, setListings] = useState(undefined);\n\n  const [page, setPage] = useState(1);\n\n  const loadListings = (pageNum, signal) =>\n    getListings(pageNum, signal)\n      .then((data) => setListings(data))\n      .catch((err) => {\n        if (err.name !== \"AbortError\") {\n          throw err;\n        }\n      });\n\n  useEffect(() => {\n    const ab = new AbortController();\n    loadListings(page, ab.signal);\n    return () => {\n      ab.abort();\n    };\n  }, [page]);\n\n  useEffect(() => {\n    console.log(`\n      [DEBUG] *** useEffect@MarketPlace component *** \\n\n      id : ${formData._id} \\n\n      title : ${formData.title} \\n\n      price : ${formData.price} \\n\n      numOfStock: ${formData.numOfStock} \\n\n      description  : ${formData.description} \\n\n      condition  : ${formData.condition} \\n\n      availibility  : ${formData.availability} \\n\n    `)\n\n  }, [formData])\n\n  const addItem = (newItem) => {\n    console.log(`[INFO] addItem function ...`)\n\n    createListing(newItem)\n      .then(() => {\n        loadListings();\n        setFormData({\n          type: \"setData\",\n          payloads: initFormData\n        });\n      });\n    // // todo:id to get from server when submit to API\n    // newItem._id = parseInt(Math.random() * 100000000);\n    // const newListings = [...listings, newItem];\n    // setListings(newListings);\n    // setFormData({\n    //   type: \"setData\",\n    //   payloads: {}\n    // });\n  };\n\n  const editItem = (index) => {\n    console.log(`[INFO] editItem function ...`)\n    // alert(`\n    // [INFO] editItem \\n\n    // index : ${index}\\n\n    // _id : ${listings[index]._id}\n    // `)\n    setEditMode(true);\n    setFormData({\n      type: \"setData\",\n      payloads: listings[index]\n    })\n  }\n\n  const updateItem = (updatedItem) => {\n    console.log(`[INFO] updateItem function ...`)\n\n  //   console.log(`\n  //   [DEBUG] *** updateItem function  *** \\n\n  //   id : ${formData._id} \\n\n  //   title : ${formData.title} \\n\n  //   price : ${formData.price} \\n\n  //   numOfStock: ${formData.numOfStock} \\n\n  //   description  : ${formData.description} \\n\n  //   condition  : ${formData.condition} \\n\n  //   availibility  : ${formData.availability} \\n\n  // `)\n\n    toggleEditMode();\n    updateListing(updatedItem)\n      .then(() => {\n        loadListings();\n        setFormData({\n          type: \"setData\",\n          payloads: initFormData\n        });\n      });\n\n\n    // toggleEditMode();\n    // let newListings = listings.filter(job => job._id !== updatedItem._id)\n    // newListings = [...newListings, updatedItem];\n    // setListings(newListings)\n    // setFormData({\n    //   type: \"setData\",\n    //   payloads: {}\n    // });\n  }\n\n  const deleteItem = (index) => {\n    console.log(`[INFO] deleteItem function ...`)\n    // alert(`\n    // [INFO] deleteItem \\n\n    // index : ${index}\\n\n    // _id : ${listings[index]._id}\n    // `)\n\n    const id = listings[index]._id;\n    deleteListing(id)\n      .then(() => {\n        loadListings();\n        setFormData({\n          type: \"setData\",\n          payloads: initFormData\n        });\n      });\n      \n\n    // const newListings = [...listings];\n    // newListings.splice(index, 1);\n    // setListings(newListings);\n\n  }\n\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n  }\n\n  const onCancel = () => {\n    console.log(`[DEBUG] onCancel function ...`)\n    // alert(`[DEBUG] *** onCancel function *** \\n`)\n    toggleEditMode();\n    setFormData({\n      type: \"setData\",\n      payloads: {}\n    });\n  }\n\n  return (\n    <main className=\"bg-gray-50 lg:flex\">\n      <div className=\"flex-1\">\n        <div className=\"max-w-7xl mx-auto pt-16 pb-24 px-4 sm:px-6 lg:px-8\">\n          <div className=\"sm:flex sm:flex-col sm:align-center mb-12\">\n            <h1 className=\"text-5xl font-extrabold text-gray-900 sm:text-center\">\n              Marketplace\n            </h1>\n          </div>\n          {/* <!-- =============== Prev & Next buttons ============ --> */}\n          <div className=\"flex justify-between\">\n            <button \n            // className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\n              className=\"\n                bg-transparent \n                hover:bg-pink-600 \n                text-pink-700 \n                font-semibold \n                hover:text-white \n                py-2 px-10 \n                border \n                border-pink-600 \n                hover:border-transparent \n                rounded-2xl\n                focus:ring-pink-900\n                m-2\n              \"\n              disabled={page === 1}\n              onClick={() => setPage(page - 1)}\n              >\n              Prev\n            </button>\n            <button \n            // className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\n            className=\"\n                bg-transparent \n                hover:bg-pink-600 \n                text-pink-700 \n                font-semibold \n                hover:text-white \n                py-2 px-10 \n                border \n                border-pink-600 \n                hover:border-transparent \n                rounded-2xl\n                focus:ring-pink-900\n                m-2\n              \"\n            onClick={() => setPage(page + 1)}\n            >\n              Next\n            </button>\n          </div>\n          {/* <div className=\"flex justify-between\">\n            <button\n              type=\"button\"\n              disabled={page === 1}\n              onClick={() => setPage(page - 1)}\n            >\n             Prev\n            </button>\n            <button type=\"button\" onClick={() => setPage(page + 1)}>\n              Next\n            </button>\n          </div> */}\n          {/* <!-- =============== product ul start ============ --> */}\n          <div className=\"\n              grid\n              md:grid-cols-2\n              gap-x-4 gap-y-8\n              xl:grid-cols-3 xl:gap-x-6\n            \">\n            {/* <!-- =============== product li start ============ --> */}\n\n            {listings &&\n              listings.map((item, index) => (\n                <ListingItem\n                  key={item._id}\n                  item={item}\n                  index={index}\n                  onEdit={editItem}\n                  onDelete={deleteItem}\n                />\n              ))}\n            {/* <!-- =============== product li end ============ --> */}\n          </div>\n          {/* <!-- =============== product ul end ============ --> */}\n\n        </div>\n      </div>\n\n\n      {/* <!-- =============== form start ============ --> */}\n      <MarketPlaceForm\n        addItem={addItem}\n        updateItem={updateItem}\n        formData={formData}\n        setFormData={setFormData}\n        onCancel={onCancel}\n        editMode={editMode}\n      />\n      {/* <!-- =============== form end ============ --> */}\n\n    </main>\n  )\n}","import './App.css';\n// import { Career } from \"./pages/career\"\nimport { Marketplace } from './pages/marketplace';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    {/* <Career /> */}\n    <Marketplace />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}